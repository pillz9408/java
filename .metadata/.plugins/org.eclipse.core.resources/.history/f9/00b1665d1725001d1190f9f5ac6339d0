package thebrains.pim.controller;

import thebrains.pim.model.Member;
import thebrains.pim.service.MemberService;
import thebrains.pim.service.MemberServiceImpl;
import thebrains.pim.view.TUIView;

public class MemberController { // 요청을 제어하는 요소.
	// MVC(Model-View-Controller) 모델 기반 MVCS (MVC-Service)
	// 개인정보관리시스템(Personal Information System)
	// C.R.U.D (Create.Read.Update.Delete) : 자료를 처리하는 기본기능
	// 추가기능 : 정렬, 검색 페이지
	//MemberView memberView = null;
	
	MemberService<Member> memberService = null;
	public static final String MEMBER_DB = "memberdb.txt";
	public static TUIView tui = new TUIView();
	public static Map<String, Member> session = new HashMap<String, Member>();
	public MemberController() {
		memberService = new MemberServiceImpl<Member>();
	}	
	public void dispatch() { // dispatch : 시작의 의미, 명령을 가져옴
		//System.out.println("MemberController 의 dispatch() 호출 받음");
		memberService.readFile();
		int menu = 0; // 0 은 종료
		boolean isLogin = true;
		boolean isRoot = true;
		// true . true : root(관리자) 로그인, true,false : 사용자 로그인, false: 로그인 전
		do {
			sessionMember = session.get("member");
			if (sessionMember != null) {
				isLogin = true;
				if (sessionMember.getEmail().toString().equals("root@induk.ac.kr"))
					isRoot = true;
			} else {
				isLogin = false;
				isRoot = false;
			}

			tui.showMenu(isLogin, isRoot); // 로그인 여부, 루트 여부에 따라 메뉴가 다름

			menu = tui.inputMenu();
			switch (menu) {
				case 0: // 종료 : 로그아웃, 파일로 저장
					memberService.logout();
					memberService.saveFile();
					break;
				case 1: // 등록
					member = new Member();
					member.setId(MemberController.tui.inputId());

					// email 중복 확인 필요
					member.setEmail(MemberController.tui.inputEmail());

					member.setPw(MemberController.tui.inputPw());
					member.setName(MemberController.tui.inputName());
					member.setPhone(MemberController.tui.inputPhone());
					member.setAddress(MemberController.tui.inputAddress());
					while (!isValid(member)) //유효성 확인 : @, -, null등
						;
					if(memberService.postMember(member) > 0)
						memberService.applyUpdate();
					else
						memberView.printFail("등록에 실패");
				break;
				case 2: // 로그인
					sessionMember = memberService.login(tui.inputEmail(), tui.inputPw());
					break;
		}while (menu  != 0);
		
	}

}
